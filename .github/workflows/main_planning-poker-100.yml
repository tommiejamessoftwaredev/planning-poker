name: Build and deploy Node.js app to Azure Web App - planning-poker-100

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: "20.x"
          cache: "npm"

      - name: Install dependencies for React app
        run: |
          cd client
          npm install

      # - name: Set environment variables for production
      #   run: |
      #     echo "REACT_APP_API_URL=${{ secrets.REACT_APP_API_URL }}" > client/.env

      - name: Set environment variables for production
        run: |
          echo "REACT_APP_API_URL=https://planning-poker-100.azurewebsites.net" > client/.env

      - name: Build React app
        run: |
          cd client
          npm run build

      - name: Verify React build output
        run: ls -R client/build

      - name: Install dependencies for Node.js server
        run: |
          cd server
          npm install

      - name: Prepare artifact for deployment
        run: |
          mkdir -p deploy/client/build
          mkdir -p deploy/server
          cp -r client/build/* deploy/client/build/
          cp -r server/* deploy/server/
          cp server/package.json deploy/server/
          cp server/package-lock.json deploy/server/
          echo "Files in deploy directory after copy:"
          ls -R deploy

      - name: Verify files in deploy directory
        run: ls -R deploy

      - name: Zip artifact for deployment
        run: |
          cd deploy
          zip -r release.zip .
          echo "Files in release.zip:"
          unzip -l release.zip

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: deploy/release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: deploy

      - name: List files for debug after download
        run: ls -R deploy

      - name: Unzip artifact for deployment
        run: unzip deploy/release.zip -d deploy

      - name: List files after unzipping
        run: ls -R deploy

      - name: Move files to wwwroot
        run: |
          mv deploy/* .
          ls -R

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_00818A86B99A47B2BC2170B20CB46650 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_CE0D37E0CFCC482F8BDECFF66D8CF289 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8F3EEC284F0D484AA6B8EA2ACA562983 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "planning-poker-100"
          slot-name: "Production"
          package: .

      - name: List deployed files for debug
        run: ls -R
